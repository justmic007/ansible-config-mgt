# ---
# - name: Install and configure Apache (`httpd` service)
#   become: true
#   ansible.builtin.yum:
#     name: "httpd"
#     state: present

# - name: Install git
#   become: true
#   ansible.builtin.yum:
#     name: "git"
#     state: present

# - name: Clone a repo
#   become: true
#   ansible.builtin.git:
#     repo: https://github.com/justmic007/tooling.git
#     dest: /var/www/html
#     force: yes

# # - name: Copy html content to one level up
# #   become: true
# #   command: cp -r /var/www/html/html/ /var/www/

# # - name: Copy HTML content to one level up
# #   ansible.builtin.copy:
# #     src: /var/www/html/html/
# #     dest: /var/www/

# - name: Copy html content to one level up
#   become: true
#   copy:
#     src: /var/www/html/html/
#     dest: /var/www/html/
#     remote_src: yes

# - name: Start service httpd, if not started
#   become: true
#   ansible.builtin.service:
#     name: httpd
#     state: started

# - name: Recursively remove /var/www/html/html/ directory
#   become: true
#   ansible.builtin.file:
#     path: /var/www/html/html
#     state: absent




---
- name: Update system packages using yum
  ansible.builtin.yum:
    name: '*'
    state: latest

- name: Install and configure Nginx
  become: true
  ansible.builtin.yum:
    name: "nginx"
    state: present

- name: Install git
  become: true
  ansible.builtin.yum:
    name: "git"
    state: present

- name: Install PHP and required extensions
  become: true
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
  loop:
    - php
    - php-fpm
    - php-common
    - php-curl
    - php-json
    - php-pdo
    - php-mbstring
    - php-xml
    - php-mysqli


# ---------- find a script to uncomment this block of code and rename the fascgi_pass value. Also the clock should not be duplicated whenever the playbook is run

    location ~ \.php$ {
        root           /usr/share/nginx/html;
        fastcgi_pass   unix:/var/run/php-fpm/www.sock;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        include        fastcgi_params;
    }

# ---------------------------------------------------------

- name: Enable PHP MySQLi Extension
  replace:
    path: /etc/php.ini
    regexp: '^;extension=mysqli$'
    replace: 'extension=mysqli'
  notify: Restart PHP-FPM

- name: Check PHP Configuration
  command: php -i | grep php.ini
  register: php_config

- name: Display PHP Configuration
  debug:
    var: php_config.stdout_lines

- name: Start PHP-FPM service
  ansible.builtin.systemd:
    name: php-fpm
    state: started

- name: Add Git exception for directory with dubious ownership
  become: true
  ansible.builtin.command: git config --global --add safe.directory /usr/share/nginx/html

- name: Create a temporary directory within /usr/share/nginx/
  ansible.builtin.file:
    path: /usr/share/nginx/temporary
    state: directory
  register: temp_dir

- name: Clone a repo using the git module
  become: true
  ansible.builtin.git:
    repo: https://github.com/justmic007/tooling.git
    dest: "{{ temp_dir.path }}"
    version: master  # You can specify a specific branch or commit if needed
    force: yes

- name: Use rsync to move contents to /usr/share/nginx/html
  ansible.builtin.shell: rsync -a --delete "{{ temp_dir.path }}/" /usr/share/nginx/html/
  ansible.builtin.shell: rsync -a --delete --exclude=index.html --exclude=50x.html "{{ temp_dir.path }}/" /usr/share/nginx/html/

- name: Copy html content to one level up
  become: true
  ansible.builtin.copy:
    src: /usr/share/nginx/html/html/
    dest: /usr/share/nginx/html/
    remote_src: yes

- name: Set ownership and permissions for /usr/share/nginx/html
  become: true
  ansible.builtin.file:
    path: /usr/share/nginx/html
    owner: nginx  # Change this to the appropriate user
    group: nginx  # Change this to the appropriate group
    mode: '0755'  # Sets permissions to rwxr-xr-x
    recurse: yes
    force: yes

- name: Set ownership and permissions for /var/run/php-fpm/www.sock
  become: true
  ansible.builtin.file:
    path: /var/run/php-fpm/www.sock
    owner: nginx  # Change this to the appropriate user
    group: nginx  # Change this to the appropriate group
    mode: '660'  # Sets permissions to rwxr-xr-x
    # recurse: yes
    force: yes

# - name: Add index.php to index list
#   become: true
#   ansible.builtin.replace:
#     path: /etc/nginx/conf.d/default.conf
#     regexp: '^(\s*index\s+.*)$'
#     replace: '\1 index.php;'
#     backup: yes

# - name: Add index.php to index list
#   become: true
#   ansible.builtin.replace:
#     path: /etc/nginx/conf.d/default.conf
#     regexp: '^(\s*index\s+.*)$'
#     replace: '        index  index.php index.html index.htm;'
#     backup: yes

# - name: Add PHP processing block
#   # ansible.builtin.replace:
#   ansible.builtin.lineinfile:
#     path: /etc/nginx/conf.d/default.conf
#     # path: /etc/nginx/conf.d/default.conf
#     line: |
#       # PHP processing
#       location ~ \.php$ {
#           root           /usr/share/nginx/html;
#           fastcgi_pass   unix:/var/run/php-fpm/www.sock;  # Adjust this path as needed
#           fastcgi_index  index.php;
#           fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
#           include        fastcgi_params;
#       }
#     insertafter: '^(\s*location\s+=\s+/50x\.html\s+{)$'
#     backup: yes

- name: Start service nginx, if not started
  become: true
  ansible.builtin.service:
    name: nginx
    state: started

- name: Recursively remove /usr/share/nginx/html/html/ directory
  become: true
  ansible.builtin.file:
    path: /usr/share/nginx/html/html
    state: absent

